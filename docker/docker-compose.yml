version: "3.7"

networks:
  unleash_network:
    driver: bridge

services:

  # The Unleash Proxy is used for Front-End clients
  # For security reasons, should not talk to the Unleash Server directly
  unleash_proxy:
    image: unleashorg/unleash-proxy
    container_name: "unleash_proxy"
    ports:
      - "3000:3000"
    environment:
      UNLEASH_PROXY_CLIENT_KEYS: "proxy-client-key"
      UNLEASH_URL: "http://unleash_server:4242/api"
      UNLEASH_API_TOKEN: "default:development.unleash-insecure-api-token"
    networks:
      - unleash_network
    depends_on:
      - unleash_server

  # The Unleash Server contains the Unleash configuration and
  # communicates with server-side SDKs and the Unleash Proxy
  unleash_server:
    image: unleashorg/unleash-server
    container_name: "unleash_server"
    ports:
      - "4242:4242"
    environment:
      DATABASE_HOST: "unleash_postgres"
      DATABASE_NAME: "unleash_db"
      DATABASE_USERNAME: "unleash_user"
      DATABASE_PASSWORD: "unleash_password"
      DATABASE_SSL: "false"
      INIT_CLIENT_API_TOKENS: "default:development.unleash-insecure-api-token"
      ENABLED_ENVIRONMENTS: "default,development,production"
    networks:
      - unleash_network
    depends_on:
      - unleash_postgres
  
  unleash_postgres:
    image: postgres:latest
    container_name: "unleash_postgres"
    ports:
      - "5432:5432"
    restart: always
    environment:
      POSTGRES_USER: "unleash_user"
      POSTGRES_PASSWORD: "unleash_password"
      POSTGRES_DB: "unleash_db"
    networks:
      - unleash_network

# UNLEASH SERVER
#   - URL: localhost:4242 
#   - USERNAME: admin
#   - PASSWORD: unleash4all
